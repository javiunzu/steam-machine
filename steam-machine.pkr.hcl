# This file was autogenerated by the BETA 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# All generated input variables will be of 'string' type as this is how Packer JSON
# views them; you can change their type later on. Read the variables type
# constraints documentation
# https://www.packer.io/docs/from-1.5/variables#type-constraints for more info.
variable "debian_version" {
  type    = string
  default = "10.8.0"
}

variable "domain" {
  type    = string
  default = "packer.local"
}

variable "nic" {
  type    = string
  default = "enp0s31f6"
}

variable "password" {
  type    = string
  default = "packer"
}

variable "username" {
  type    = string
  default = "packer"
}

variable "vm_name" {
  type    = string
  default = "steam-machine"
}

# "timestamp" template function replacement
locals { timestamp = regex_replace(timestamp(), "[- TZ:]", "") }

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/from-1.5/blocks/source
#could not parse template for following block: "template: generated:3:307: executing \"generated\" at <.Name>: can't evaluate field Name in type struct { HTTPIP string; HTTPPort string }"

source "virtualbox-iso" "debian" {
  boot_command            = ["<esc><wait>", "install <wait>", "preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg <wait>", "debian-installer=en_US <wait>", "auto <wait>", "locale=en_US <wait>", "kbd-chooser/method=us <wait>", "keyboard-configuration/xkb-keymap=es <wait>", "netcfg/get_hostname={{ .Name }} <wait>", "netcfg/get_domain=${var.domain} <wait>", "fb=false <wait>", "debconf/frontend=noninteractive <wait>", "console-setup/ask_detect=false <wait>", "console-keymaps-at/keymap=us <wait>", "passwd/username=${var.username} <wait>", "passwd/user-password=${var.password} <wait>", "passwd/user-password-again=${var.password} <wait>", "<enter><wait>"]
  boot_wait               = "10s"
  disk_size               = 20480
  guest_additions_path    = "VBoxGuestAdditions_{{.Version}}.iso"
  guest_os_type           = "Debian_64"
  headless                = true
  http_directory          = "http"
  iso_checksum            = "file:http://cdimage.debian.org/cdimage/release/${var.debian_version}/amd64/iso-cd/SHA512SUMS"
  iso_url                 = "http://cdimage.debian.org/cdimage/release/${var.debian_version}/amd64/iso-cd/debian-${var.debian_version}-amd64-netinst.iso"
  keep_registered         = true
  shutdown_command        = "echo '${var.password}'|sudo -S /sbin/shutdown -hP now"
  skip_export             = true
  ssh_password            = "${var.password}"
  ssh_port                = 22
  ssh_username            = "${var.username}"
  ssh_wait_timeout        = "10000s"
  vboxmanage              = [["modifyvm", "{{.Name}}", "--memory", "4096"], ["modifyvm", "{{.Name}}", "--cpus", "4"], ["modifyvm", "{{.Name}}", "--vram", "128"], ["modifyvm", "{{.Name}}", "--audio", "pulse"]]
  virtualbox_version_file = ".vbox_version"
  vm_name                 = "${var.vm_name}"
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/from-1.5/blocks/build
build {
  sources = ["source.virtualbox-iso.debian"]


  #could not parse template for following block: "template: generated:2:52: executing \"generated\" at <.Vars>: can't evaluate field Vars in type struct { HTTPIP string; HTTPPort string }"
  provisioner "shell" {
    execute_command = "echo '${var.password}' | {{.Vars}} sudo -E -S bash '{{.Path}}'"
    scripts         = ["install.sh"]
  }
  post-processor "shell-local" {
    inline = ["VBoxManage modifyvm ${var.vm_name} --nic1 bridged --nictype1 82545EM --bridgeadapter1 ${var.nic}"]
  }
}
